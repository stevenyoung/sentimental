// Generated by CoffeeScript 1.6.2
(function() {
  var LocationToolbarView, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  LocationToolbarView = (function(_super) {
    __extends(LocationToolbarView, _super);

    function LocationToolbarView() {
      _ref = LocationToolbarView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    LocationToolbarView.prototype.model = Location;

    LocationToolbarView.prototype.el = document.getElementById('toolbar');

    LocationToolbarView.prototype.events = {
      'click #update': 'handleUserUpdate',
      'click #show': 'showSharedLocations',
      'click #share': 'shareUserLocation'
    };

    LocationToolbarView.prototype.shareUserLocation = function(event) {
      var _this = this;

      return navigator.geolocation.getCurrentPosition(function(position) {
        return $.ajax({
          url: '/locate/share',
          data: {
            latitude: position.coords.latitude,
            longitude: position.coords.longitude
          },
          type: 'POST',
          success: function(res, status, xhr) {}
        });
      });
    };

    LocationToolbarView.prototype.getUserLocation = function() {
      var _this = this;

      return navigator.geolocation.getCurrentPosition(function(position) {
        var contentString, latitude, location, longitude;

        latitude = position.coords.latitude;
        longitude = position.coords.longitude;
        location = new google.maps.LatLng(latitude, longitude);
        return contentString = "(w3c location) lat:" + latitude + " lon:" + longitude;
      });
    };

    LocationToolbarView.prototype.showUserLocation = function() {
      var _this = this;

      return navigator.geolocation.getCurrentPosition(function(position) {
        var contentString, latitude, location, longitude, mapOpts;

        latitude = position.coords.latitude;
        longitude = position.coords.longitude;
        location = new google.maps.LatLng(latitude, longitude);
        contentString = "(w3c location) lat:" + latitude + " lon:" + longitude;
        mapOpts = {
          location: location,
          coords: {
            lat: latitude,
            lng: longitude
          },
          infotext: contentString,
          tilt: 45,
          heading: 90
        };
        return _this.updateMap(mapOpts);
      });
    };

    LocationToolbarView.prototype.handleUserUpdate = function() {
      var userLocation;

      return userLocation = this.showUserLocation();
    };

    LocationToolbarView.prototype.initialize = function() {};

    return LocationToolbarView;

  })(MapView);

}).call(this);
